{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","player1team1","setPlayer1Team1","player1team2","setPlayer1Team2","player2team1","setPlayer2Team1","player2team2","setPlayer2Team2","player3team1","setPlayer3Team1","player3team2","setPlayer3Team2","className","style","fontSize","type","value","onChange","e","target","placeholder","onClick","playerName","nba","stats","playerInfo","PlayerID","findPlayer","playerId","then","info","console","log","playInfo","Object","assign","commonPlayerInfo","playerHeadlineStats","generateTree","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAiFeA,EA9EH,WAAO,IAAD,EACwBC,mBAAS,IADjC,mBACTC,EADS,KACKC,EADL,OAEwBF,mBAAS,IAFjC,mBAETG,EAFS,KAEKC,EAFL,OAGwBJ,mBAAS,IAHjC,mBAGTK,EAHS,KAGKC,EAHL,OAIwBN,mBAAS,IAJjC,mBAITO,EAJS,KAIKC,EAJL,OAKwBR,mBAAS,IALjC,mBAKTS,EALS,KAKKC,EALL,OAMwBV,mBAAS,IANjC,mBAMTW,EANS,KAMKC,EANL,KAwBhB,OACE,sBAAKC,UAAU,MAAf,UACE,uBACA,uBACA,oBAAIA,UAAU,gCAAgCC,MAAO,CAAEC,SAAU,QAAjE,iCAGA,qBAAKF,UAAU,4BAAf,SACA,uBAAMA,UAAU,UAAhB,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,QAAf,SACE,iDAEF,qBAAKA,UAAU,QAAf,SACE,sDAGJ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOhB,EAAciB,SAAU,SAAAC,GAAC,OAAEjB,EAAgBiB,EAAEC,OAAOH,QAAQI,YAAY,gBAEpG,sBAAKR,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOd,EAAce,SAAU,SAAAC,GAAC,OAAEf,EAAgBe,EAAEC,OAAOH,QAAQI,YAAY,mBAGtG,sBAAKR,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOZ,EAAca,SAAU,SAAAC,GAAC,OAAEb,EAAgBa,EAAEC,OAAOH,QAAQI,YAAY,gBAEpG,sBAAKR,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOV,EAAcW,SAAU,SAAAC,GAAC,OAAEX,EAAgBW,EAAEC,OAAOH,QAAQI,YAAY,mBAGtG,sBAAKR,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOR,EAAcS,SAAU,SAAAC,GAAC,OAAET,EAAgBS,EAAEC,OAAOH,QAAQI,YAAY,gBAEpG,sBAAKR,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAON,EAAcO,SAAU,SAAAC,GAAC,OAAEP,EAAgBO,EAAEC,OAAOH,QAAQI,YAAY,mBAGxG,wBAAQR,UAAU,iBAAiBS,QArDlB,WAVE,IAACC,IAWPtB,EARfuB,IAAIC,MAAMC,WAAW,CAAEC,SAAUH,IAAII,WAAWL,GAAYM,WAAWC,MAAK,SAACC,GACzEC,QAAQC,IAAIF,GACZ,IAAMG,EAAWC,OAAOC,OAAOL,EAAKM,iBAAiB,GAAIN,EAAKO,oBAAoB,IAClFN,QAAQC,IAAIC,MAyD8BK,GAA5C,oCC9DSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3ab9f896.chunk.js","sourcesContent":["import nba from \"nba\";\nimport {useState} from 'react';\n\nconst App = () => {\n  const [player1team1, setPlayer1Team1] = useState(\"\");\n  const [player1team2, setPlayer1Team2] = useState(\"\");\n  const [player2team1, setPlayer2Team1] = useState(\"\");\n  const [player2team2, setPlayer2Team2] = useState(\"\");\n  const [player3team1, setPlayer3Team1] = useState(\"\");\n  const [player3team2, setPlayer3Team2] = useState(\"\");\n\n  const loadPlayerInfo = (playerName) => {\n    //playerId is getting from front end\n    //nba.findPlayer('Stephen Curry').playerId\n    nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId}).then((info) => {\n        console.log(info);\n        const playInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n        console.log(playInfo);\n        // this.setState({ playerInfo: playInfo });//set states\n    })\n  }\n  const generateTree = () => {\n    loadPlayerInfo(player1team1)\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <br></br>\n      <br></br>\n      <h1 className=\"ui blue center aligned header\" style={{ fontSize: \"4rem\" }}>\n        NBA Trade Evaluator\n      </h1>\n      <div className=\"ui segment center aligned\">\n      <form className=\"ui form\">\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <h1>Team 1 Offers</h1>\n          </div>\n          <div className=\"field\">\n            <h1>Team 1 Receives</h1>\n          </div>\n        </div>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <label>Player 1</label>\n            <input type=\"text\" value={player1team1} onChange={e=>setPlayer1Team1(e.target.value)} placeholder=\"Player 1\" />  \n          </div>\n          <div className=\"field\">\n            <label>Player 1</label>\n            <input type=\"text\" value={player1team2} onChange={e=>setPlayer1Team2(e.target.value)} placeholder=\"Player 1\" />  \n          </div>\n        </div>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <label>Player 2</label>\n            <input type=\"text\" value={player2team1} onChange={e=>setPlayer2Team1(e.target.value)} placeholder=\"Player 2\" />  \n          </div>\n          <div className=\"field\">\n            <label>Player 2</label>\n            <input type=\"text\" value={player2team2} onChange={e=>setPlayer2Team2(e.target.value)} placeholder=\"Player 2\" />  \n          </div>\n        </div>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <label>Player 3</label>\n            <input type=\"text\" value={player3team1} onChange={e=>setPlayer3Team1(e.target.value)} placeholder=\"Player 3\" />  \n          </div>\n          <div className=\"field\">\n            <label>Player 3</label>\n            <input type=\"text\" value={player3team2} onChange={e=>setPlayer3Team2(e.target.value)} placeholder=\"Player 3\" />  \n          </div>\n        </div>\n      <button className=\"ui blue button\" onClick={generateTree()}>Generate Tree</button>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}