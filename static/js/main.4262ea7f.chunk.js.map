{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","player1team1","setPlayer1Team1","player1team2","setPlayer1Team2","player2team1","setPlayer2Team1","player2team2","setPlayer2Team2","player3team1","setPlayer3Team1","player3team2","setPlayer3Team2","generateTree","playerName","getPlayerId","nba","findPlayer","playerId","console","log","stats","playerInfo","PlayerID","then","info","playInfo","Object","assign","commonPlayerInfo","playerHeadlineStats","catch","err","loadPlayerInfo","className","style","fontSize","type","value","onChange","e","target","placeholder","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAiFeA,EA9EH,WACV,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAwCF,mBAAS,IAAjD,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAAwCJ,mBAAS,IAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KACA,EAAwCR,mBAAS,IAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAwCV,mBAAS,IAAjD,mBAAOW,EAAP,KAAqBC,EAArB,KAYMC,EAAe,YAVE,SAACC,GAEtB,IAAIC,EAAcC,IAAIC,WAAWH,GAAYI,SAC7CC,QAAQC,IAAIL,GACZC,IAAIK,MAAMC,WAAW,CAACC,SAAUR,IAAcS,MAAK,SAACC,GAChDN,QAAQC,IAAIK,GACZ,IAAMC,EAAWC,OAAOC,OAAOH,EAAKI,iBAAiB,GAAIJ,EAAKK,oBAAoB,IAClFX,QAAQC,IAAIM,MACbK,OAAM,SAACC,GAAD,OAASb,QAAQC,IAAIY,MAG9BC,CAAehC,IAKjB,OACE,sBAAKiC,UAAU,MAAf,UACE,uBACA,uBACA,oBAAIA,UAAU,gCAAgCC,MAAO,CAAEC,SAAU,QAAjE,iCAGA,qBAAKF,UAAU,4BAAf,SACA,uBAAMA,UAAU,UAAhB,UACE,sBAAKA,UAAU,aAAf,UACE,qBAAKA,UAAU,QAAf,SACE,iDAEF,qBAAKA,UAAU,QAAf,SACE,sDAGJ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOrC,EAAcsC,SAAU,SAAAC,GAAC,OAAEtC,EAAgBsC,EAAEC,OAAOH,QAAQI,YAAY,gBAEpG,sBAAKR,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOnC,EAAcoC,SAAU,SAAAC,GAAC,OAAEpC,EAAgBoC,EAAEC,OAAOH,QAAQI,YAAY,mBAGtG,sBAAKR,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAOjC,EAAckC,SAAU,SAAAC,GAAC,OAAElC,EAAgBkC,EAAEC,OAAOH,QAAQI,YAAY,gBAEpG,sBAAKR,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAO/B,EAAcgC,SAAU,SAAAC,GAAC,OAAEhC,EAAgBgC,EAAEC,OAAOH,QAAQI,YAAY,mBAGtG,sBAAKR,UAAU,aAAf,UACE,sBAAKA,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAO7B,EAAc8B,SAAU,SAAAC,GAAC,OAAE9B,EAAgB8B,EAAEC,OAAOH,QAAQI,YAAY,gBAEpG,sBAAKR,UAAU,QAAf,UACE,6CACA,uBAAOG,KAAK,OAAOC,MAAO3B,EAAc4B,SAAU,SAAAC,GAAC,OAAE5B,EAAgB4B,EAAEC,OAAOH,QAAQI,YAAY,mBAGxG,wBAAQR,UAAU,iBAAiBS,QAAS,kBAAM9B,KAAlD,oCC9DS+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.4262ea7f.chunk.js","sourcesContent":["import nba from \"nba\";\nimport {useState} from 'react';\n\nconst App = () => {\n  const [player1team1, setPlayer1Team1] = useState(\"\");\n  const [player1team2, setPlayer1Team2] = useState(\"\");\n  const [player2team1, setPlayer2Team1] = useState(\"\");\n  const [player2team2, setPlayer2Team2] = useState(\"\");\n  const [player3team1, setPlayer3Team1] = useState(\"\");\n  const [player3team2, setPlayer3Team2] = useState(\"\");\n\n  const loadPlayerInfo = (playerName) => {\n    \n    let getPlayerId = nba.findPlayer(playerName).playerId\n    console.log(getPlayerId)\n    nba.stats.playerInfo({PlayerID: getPlayerId}).then((info) => {\n        console.log(info);\n        const playInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\n        console.log(playInfo);\n    }).catch((err) => console.log(err))\n  }\n  const generateTree = () => {\n    loadPlayerInfo(player1team1);\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <br></br>\n      <br></br>\n      <h1 className=\"ui blue center aligned header\" style={{ fontSize: \"4rem\" }}>\n        NBA Trade Evaluator\n      </h1>\n      <div className=\"ui segment center aligned\">\n      <form className=\"ui form\">\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <h1>Team 1 Offers</h1>\n          </div>\n          <div className=\"field\">\n            <h1>Team 1 Receives</h1>\n          </div>\n        </div>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <label>Player 1</label>\n            <input type=\"text\" value={player1team1} onChange={e=>setPlayer1Team1(e.target.value)} placeholder=\"Player 1\" />  \n          </div>\n          <div className=\"field\">\n            <label>Player 1</label>\n            <input type=\"text\" value={player1team2} onChange={e=>setPlayer1Team2(e.target.value)} placeholder=\"Player 1\" />  \n          </div>\n        </div>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <label>Player 2</label>\n            <input type=\"text\" value={player2team1} onChange={e=>setPlayer2Team1(e.target.value)} placeholder=\"Player 2\" />  \n          </div>\n          <div className=\"field\">\n            <label>Player 2</label>\n            <input type=\"text\" value={player2team2} onChange={e=>setPlayer2Team2(e.target.value)} placeholder=\"Player 2\" />  \n          </div>\n        </div>\n        <div className=\"two fields\">\n          <div className=\"field\">\n            <label>Player 3</label>\n            <input type=\"text\" value={player3team1} onChange={e=>setPlayer3Team1(e.target.value)} placeholder=\"Player 3\" />  \n          </div>\n          <div className=\"field\">\n            <label>Player 3</label>\n            <input type=\"text\" value={player3team2} onChange={e=>setPlayer3Team2(e.target.value)} placeholder=\"Player 3\" />  \n          </div>\n        </div>\n      <button className=\"ui blue button\" onClick={() => generateTree()}>Generate Tree</button>\n      </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}